// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.24.4
// source: flogram.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FLAGS int32

const (
	FLAGS_V1                FLAGS = 0
	FLAGS_Tg                FLAGS = 1
	FLAGS_FromUser          FLAGS = 2
	FLAGS_FromGroup         FLAGS = 3
	FLAGS_FromChannel       FLAGS = 4
	FLAGS_FromChannelPublic FLAGS = 5
)

// Enum value maps for FLAGS.
var (
	FLAGS_name = map[int32]string{
		0: "V1",
		1: "Tg",
		2: "FromUser",
		3: "FromGroup",
		4: "FromChannel",
		5: "FromChannelPublic",
	}
	FLAGS_value = map[string]int32{
		"V1":                0,
		"Tg":                1,
		"FromUser":          2,
		"FromGroup":         3,
		"FromChannel":       4,
		"FromChannelPublic": 5,
	}
)

func (x FLAGS) Enum() *FLAGS {
	p := new(FLAGS)
	*p = x
	return p
}

func (x FLAGS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FLAGS) Descriptor() protoreflect.EnumDescriptor {
	return file_flogram_proto_enumTypes[0].Descriptor()
}

func (FLAGS) Type() protoreflect.EnumType {
	return &file_flogram_proto_enumTypes[0]
}

func (x FLAGS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FLAGS.Descriptor instead.
func (FLAGS) EnumDescriptor() ([]byte, []int) {
	return file_flogram_proto_rawDescGZIP(), []int{0}
}

type FLO_SOURCE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags      int32  `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	FromPeerId int64  `protobuf:"varint,2,opt,name=from_peer_id,json=fromPeerId,proto3" json:"from_peer_id,omitempty"`
	ToPeerId   int64  `protobuf:"varint,3,opt,name=to_peer_id,json=toPeerId,proto3" json:"to_peer_id,omitempty"`
	TopicUid   string `protobuf:"bytes,4,opt,name=topic_uid,json=topicUid,proto3" json:"topic_uid,omitempty"`
	Title      string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *FLO_SOURCE) Reset() {
	*x = FLO_SOURCE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flogram_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FLO_SOURCE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FLO_SOURCE) ProtoMessage() {}

func (x *FLO_SOURCE) ProtoReflect() protoreflect.Message {
	mi := &file_flogram_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FLO_SOURCE.ProtoReflect.Descriptor instead.
func (*FLO_SOURCE) Descriptor() ([]byte, []int) {
	return file_flogram_proto_rawDescGZIP(), []int{0}
}

func (x *FLO_SOURCE) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *FLO_SOURCE) GetFromPeerId() int64 {
	if x != nil {
		return x.FromPeerId
	}
	return 0
}

func (x *FLO_SOURCE) GetToPeerId() int64 {
	if x != nil {
		return x.ToPeerId
	}
	return 0
}

func (x *FLO_SOURCE) GetTopicUid() string {
	if x != nil {
		return x.TopicUid
	}
	return ""
}

func (x *FLO_SOURCE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type FLO_MESSAGE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags        int32                  `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	FromPeerId   int64                  `protobuf:"varint,2,opt,name=from_peer_id,json=fromPeerId,proto3" json:"from_peer_id,omitempty"`
	ToPeerId     int64                  `protobuf:"varint,3,opt,name=to_peer_id,json=toPeerId,proto3" json:"to_peer_id,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Title        string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Text         string                 `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	TopicUid     string                 `protobuf:"bytes,7,opt,name=topic_uid,json=topicUid,proto3" json:"topic_uid,omitempty"`
	MessageLinks []string               `protobuf:"bytes,8,rep,name=message_links,json=messageLinks,proto3" json:"message_links,omitempty"`
}

func (x *FLO_MESSAGE) Reset() {
	*x = FLO_MESSAGE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flogram_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FLO_MESSAGE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FLO_MESSAGE) ProtoMessage() {}

func (x *FLO_MESSAGE) ProtoReflect() protoreflect.Message {
	mi := &file_flogram_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FLO_MESSAGE.ProtoReflect.Descriptor instead.
func (*FLO_MESSAGE) Descriptor() ([]byte, []int) {
	return file_flogram_proto_rawDescGZIP(), []int{1}
}

func (x *FLO_MESSAGE) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *FLO_MESSAGE) GetFromPeerId() int64 {
	if x != nil {
		return x.FromPeerId
	}
	return 0
}

func (x *FLO_MESSAGE) GetToPeerId() int64 {
	if x != nil {
		return x.ToPeerId
	}
	return 0
}

func (x *FLO_MESSAGE) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FLO_MESSAGE) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FLO_MESSAGE) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FLO_MESSAGE) GetTopicUid() string {
	if x != nil {
		return x.TopicUid
	}
	return ""
}

func (x *FLO_MESSAGE) GetMessageLinks() []string {
	if x != nil {
		return x.MessageLinks
	}
	return nil
}

type FlotgMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags             int32  `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	FromPeerId        int64  `protobuf:"varint,2,opt,name=from_peer_id,json=fromPeerId,proto3" json:"from_peer_id,omitempty"`
	TopicUid          string `protobuf:"bytes,3,opt,name=topic_uid,json=topicUid,proto3" json:"topic_uid,omitempty"`
	MonitoringEnabled bool   `protobuf:"varint,4,opt,name=monitoring_enabled,json=monitoringEnabled,proto3" json:"monitoring_enabled,omitempty"`
}

func (x *FlotgMonitor) Reset() {
	*x = FlotgMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flogram_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlotgMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlotgMonitor) ProtoMessage() {}

func (x *FlotgMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_flogram_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlotgMonitor.ProtoReflect.Descriptor instead.
func (*FlotgMonitor) Descriptor() ([]byte, []int) {
	return file_flogram_proto_rawDescGZIP(), []int{2}
}

func (x *FlotgMonitor) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *FlotgMonitor) GetFromPeerId() int64 {
	if x != nil {
		return x.FromPeerId
	}
	return 0
}

func (x *FlotgMonitor) GetTopicUid() string {
	if x != nil {
		return x.TopicUid
	}
	return ""
}

func (x *FlotgMonitor) GetMonitoringEnabled() bool {
	if x != nil {
		return x.MonitoringEnabled
	}
	return false
}

type FloRssHosting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags      int32  `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	TopicUid   string `protobuf:"bytes,2,opt,name=topic_uid,json=topicUid,proto3" json:"topic_uid,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	FromPeerId string `protobuf:"bytes,4,opt,name=from_peer_id,json=fromPeerId,proto3" json:"from_peer_id,omitempty"`
	RssUri     string `protobuf:"bytes,5,opt,name=rss_uri,json=rssUri,proto3" json:"rss_uri,omitempty"`
}

func (x *FloRssHosting) Reset() {
	*x = FloRssHosting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flogram_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloRssHosting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloRssHosting) ProtoMessage() {}

func (x *FloRssHosting) ProtoReflect() protoreflect.Message {
	mi := &file_flogram_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloRssHosting.ProtoReflect.Descriptor instead.
func (*FloRssHosting) Descriptor() ([]byte, []int) {
	return file_flogram_proto_rawDescGZIP(), []int{3}
}

func (x *FloRssHosting) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *FloRssHosting) GetTopicUid() string {
	if x != nil {
		return x.TopicUid
	}
	return ""
}

func (x *FloRssHosting) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FloRssHosting) GetFromPeerId() string {
	if x != nil {
		return x.FromPeerId
	}
	return ""
}

func (x *FloRssHosting) GetRssUri() string {
	if x != nil {
		return x.RssUri
	}
	return ""
}

type FloRssCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags    int32  `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	TopicUid string `protobuf:"bytes,2,opt,name=topic_uid,json=topicUid,proto3" json:"topic_uid,omitempty"`
}

func (x *FloRssCreate) Reset() {
	*x = FloRssCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flogram_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloRssCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloRssCreate) ProtoMessage() {}

func (x *FloRssCreate) ProtoReflect() protoreflect.Message {
	mi := &file_flogram_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloRssCreate.ProtoReflect.Descriptor instead.
func (*FloRssCreate) Descriptor() ([]byte, []int) {
	return file_flogram_proto_rawDescGZIP(), []int{4}
}

func (x *FloRssCreate) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *FloRssCreate) GetTopicUid() string {
	if x != nil {
		return x.TopicUid
	}
	return ""
}

var File_flogram_proto protoreflect.FileDescriptor

var file_flogram_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01,
	0x0a, 0x0a, 0x46, 0x4c, 0x4f, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x0b, 0x46, 0x4c, 0x4f, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x0a, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x74, 0x67, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x52,
	0x73, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x73, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x73, 0x73, 0x55, 0x72, 0x69, 0x22, 0x41, 0x0a,
	0x0c, 0x46, 0x6c, 0x6f, 0x52, 0x73, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x69, 0x64,
	0x2a, 0x5c, 0x0a, 0x05, 0x46, 0x4c, 0x41, 0x47, 0x53, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x31, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x67, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x72, 0x6f,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x72, 0x6f, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x72, 0x6f, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x05, 0x32, 0x72,
	0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x74, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x46, 0x6c, 0x6f, 0x74, 0x67, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x30, 0x01, 0x12, 0x2d, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x2e, 0x46, 0x6c, 0x6f, 0x74, 0x67, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x1a, 0x0d, 0x2e, 0x46, 0x6c, 0x6f, 0x74, 0x67, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x32, 0xd9, 0x01, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x52, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x46, 0x6c, 0x6f, 0x52, 0x73,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x30, 0x01, 0x12, 0x2b, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0d, 0x2e, 0x46, 0x6c, 0x6f, 0x52, 0x73,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x0e, 0x2e, 0x46, 0x6c, 0x6f, 0x52, 0x73, 0x73,
	0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0e, 0x2e, 0x46, 0x6c, 0x6f, 0x52, 0x73, 0x73, 0x48, 0x6f,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a,
	0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x0e,
	0x2e, 0x46, 0x6c, 0x6f, 0x52, 0x73, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x0c,
	0x2e, 0x46, 0x4c, 0x4f, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x30, 0x01, 0x42, 0x2c,
	0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x77, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2f,
	0x66, 0x6c, 0x6f, 0x5f, 0x74, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flogram_proto_rawDescOnce sync.Once
	file_flogram_proto_rawDescData = file_flogram_proto_rawDesc
)

func file_flogram_proto_rawDescGZIP() []byte {
	file_flogram_proto_rawDescOnce.Do(func() {
		file_flogram_proto_rawDescData = protoimpl.X.CompressGZIP(file_flogram_proto_rawDescData)
	})
	return file_flogram_proto_rawDescData
}

var file_flogram_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_flogram_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_flogram_proto_goTypes = []interface{}{
	(FLAGS)(0),                    // 0: FLAGS
	(*FLO_SOURCE)(nil),            // 1: FLO_SOURCE
	(*FLO_MESSAGE)(nil),           // 2: FLO_MESSAGE
	(*FlotgMonitor)(nil),          // 3: FlotgMonitor
	(*FloRssHosting)(nil),         // 4: FloRssHosting
	(*FloRssCreate)(nil),          // 5: FloRssCreate
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_flogram_proto_depIdxs = []int32{
	6, // 0: FLO_MESSAGE.created_at:type_name -> google.protobuf.Timestamp
	7, // 1: FlotgService.GetChats:input_type -> google.protobuf.Empty
	3, // 2: FlotgService.SetMonitoring:input_type -> FlotgMonitor
	7, // 3: FloRssService.GetFeeds:input_type -> google.protobuf.Empty
	5, // 4: FloRssService.CreateFeed:input_type -> FloRssCreate
	4, // 5: FloRssService.DeleteFeed:input_type -> FloRssHosting
	4, // 6: FloRssService.QueryMessages:input_type -> FloRssHosting
	3, // 7: FlotgService.GetChats:output_type -> FlotgMonitor
	3, // 8: FlotgService.SetMonitoring:output_type -> FlotgMonitor
	4, // 9: FloRssService.GetFeeds:output_type -> FloRssHosting
	4, // 10: FloRssService.CreateFeed:output_type -> FloRssHosting
	7, // 11: FloRssService.DeleteFeed:output_type -> google.protobuf.Empty
	2, // 12: FloRssService.QueryMessages:output_type -> FLO_MESSAGE
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_flogram_proto_init() }
func file_flogram_proto_init() {
	if File_flogram_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flogram_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FLO_SOURCE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flogram_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FLO_MESSAGE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flogram_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlotgMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flogram_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloRssHosting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flogram_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloRssCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flogram_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_flogram_proto_goTypes,
		DependencyIndexes: file_flogram_proto_depIdxs,
		EnumInfos:         file_flogram_proto_enumTypes,
		MessageInfos:      file_flogram_proto_msgTypes,
	}.Build()
	File_flogram_proto = out.File
	file_flogram_proto_rawDesc = nil
	file_flogram_proto_goTypes = nil
	file_flogram_proto_depIdxs = nil
}
